<?xml version="1.0"?>
<configuration>
	<configSections>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="SampleCode.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
	</configSections>
	<appSettings>
		<!-- Identity Token : Identity tokens are signed authentication tokens provided to merchants or other transaction originators to prevent the unauthorized use 
    of an application. Identity tokens are set to expire after 3 years, and therefore will require renewal. Identity tokens should be managed and protected in a 
    manner consistent with current key management best practices which may include access control, encryption, or use of specialized security devices. Identity 
    token owners are responsible for establishing practices for managing sensitive data like any other secure credential or business certificate. -->
		
    <add key="IdentityToken" value="PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzcwMmJhODQ2LTI1YWItNDI5Yy05ZDI2LTQzZTQxMGU4NTczNiIgSXNzdWVyPSJJcGNBdXRoZW50aWNhdGlvbiIgSXNzdWVJbnN0YW50PSIyMDEzLTEyLTE4VDE1OjU2OjU1Ljk1NFoiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iPjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDEzLTEyLTE4VDE1OjU2OjU1Ljk1NFoiIE5vdE9uT3JBZnRlcj0iMjAxNi0xMi0xOFQxNTo1Njo1NS45NTRaIj48L3NhbWw6Q29uZGl0aW9ucz48c2FtbDpBZHZpY2U+PC9zYW1sOkFkdmljZT48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6U3ViamVjdD48c2FtbDpOYW1lSWRlbnRpZmllcj5BNDIzNzhCN0YxMTAwMDAxPC9zYW1sOk5hbWVJZGVudGlmaWVyPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkF0dHJpYnV0ZSBBdHRyaWJ1dGVOYW1lPSJTQUsiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuaXBjb21tZXJjZS5jb20vSWRlbnRpdHkiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkE0MjM3OEI3RjExMDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU2VyaWFsIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5lZjRiNGIyOS0zNGI4LTRkN2EtYWFiOS00ZjE1Njg1MGZiNmY8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0ibmFtZSIgQXR0cmlidXRlTmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcyI+PHNhbWw6QXR0cmlidXRlVmFsdWU+QTQyMzc4QjdGMTEwMDAwMTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PFNpZ25hdHVyZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFNpZ25lZEluZm8+PENhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvQ2Fub25pY2FsaXphdGlvbk1ldGhvZD48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIj48L1NpZ25hdHVyZU1ldGhvZD48UmVmZXJlbmNlIFVSST0iI183MDJiYTg0Ni0yNWFiLTQyOWMtOWQyNi00M2U0MTBlODU3MzYiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSI+PC9UcmFuc2Zvcm0+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PC9UcmFuc2Zvcm0+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PERpZ2VzdFZhbHVlPlJoM080Mm5WMGVOeXBDaWJ2Vy9jNGh4ZGw1TT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+Yk9WWUtVT0JuYjh4YzhpSWl3VmVxd0NSclI3cU1MTUpZRWRlUEpvMWdLM3plVHFJbkd5M2Y1Y1RCaUkyVWtpTzM0VitWWGxraWs4Z1IxbGJBVDNvUG1XM2NVbUlJQTlTcXFnNDI5dy9oMlVOa042N3RQTUUrdHp5WmhJaHlpUmtXWDNEYWRwZDdIazAvemczZCtRaXJZMDEreXpUbXNQbnIwaml3ZUwwVzlsV1NvejF2QTZROVJDcnM5SitCYkVmbG93cWJsK1lUM1NHNUkxK01aZnJpUmF2bEtPZENJOTB4empsUlJzM2ZkZmJWc25WS0ZtNHo2ZmZDRzQ5MGY1K2tBY1FUZXc1dHdHTWF1YmNFaDhSSjJ0azRxMHZFRWVLcGt4WU9paXlkTEljenF5SGJEM1lJV2piaFI2R3B2ZDU5L1VYVzl2MWtCZXB0SUNYeDRmVTFnPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxvOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2UgeG1sbnM6bz0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzLzIwMDQvMDEvb2FzaXMtMjAwNDAxLXdzcy13c3NlY3VyaXR5LXNlY2V4dC0xLjAueHNkIj48bzpLZXlJZGVudGlmaWVyIFZhbHVlVHlwZT0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzL29hc2lzLXdzcy1zb2FwLW1lc3NhZ2Utc2VjdXJpdHktMS4xI1RodW1icHJpbnRTSEExIj5iQkcwU0cvd2RCNWJ4eVpyYjEvbTVLakhLMU09PC9vOktleUlkZW50aWZpZXI+PC9vOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2U+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvc2FtbDpBc3NlcnRpb24+"/>
		<add key="DelegatedSignOnSupported" value="false"/>
		<!-- Valid Values 'true', 'false'  NOTE: Please ask your consultant about the specific use cases for Delegated SignOn-->

		<add key="IndustryType" value="Retail"/>
		<!-- Valid Values ['Ecommerce', 'MOTO', 'Retail', 'Restaurant', ''] If left empty the values below will be used in the DataGenerator class -->

		<!-- Application Data Values (only used if IndustryType above left blank) -->
		<add key="ApplicationAttended" value="true"/>
		<!-- Valid Values 'true', 'false' -->
		<add key="ApplicationLocation" value="OnPremises"/>
		<!-- Valid Values 'Unknown', 'OnPremises', 'OffPremises', 'HomeInternet' -->
		<add key="PINCapability" value="PINSupported"/>
		<!-- Valid Values 'PINNotSupported', 'PINPadInoperative', 'PINSupported', 'PINVerifiedByDevice', 'Unknown' -->
		<add key="ReadCapability" value="HasMSR"/>
		<!-- Common Value Used 'HasMSR', 'KeyOnly' -->
		<add key="EncryptionType" value="IPADV1Compatible"/>
		<!-- [Magensa : Valid Values 'IPADV1Compatible', 'MagneSafeV4V5Compatible', 'NotSet'] -->

		<!-- MerchantProfile Values (only used if IndustryType above left blank)-->
		<add key="CustomerPresent" value="Present"/>
		<!-- Common Values Used [Ecommerce : Ecommerce] [MOTO : MOTO] [Retail/Restaurant : Present] -->
		<add key="RequestACI" value="IsCPSMeritCapable"/>
		<!-- In general default to 'IsCPSMeritCapable'. Other value is 'NotCPSMeritCapable' -->
		<add key="EntryMode" value="TrackDataFromMSR"/>
		<!-- [Ecommerce/MOTO : Keyed] [Retail/Restaurant : Keyed/TrackDataFromMSR] -->

		<!-- TransactionData Values -->
		<add key="TxnData_ProcessAsKeyed" value="true"/>
		<!-- 'true', 'false' Depending on industrytype toggle between a swipe example and a keyed transaction-->
		<add key="TxnData_EntryMode" value="TrackDataFromMSR"/>
		<!-- [Ecommerce/MOTO : Keyed] [Retail/Restaurant : Keyed/TrackDataFromMSR] -->
		<add key="TxnData_OrderOfProcessingTracks" value="Track2|Track1|Keyed"/>
		<!-- The order consists of three values seperated by Pipe. Ex. Track2|Track1|Keyed -->
		<add key="TxnData_ProcessMagensaTxn" value="true"/>
		<!-- Magensa is an End to End encryptions solution offered through MagTek -->
		<add key="TxnData_IndustryType" value="Retail"/>
		<!-- Valid Values 'Ecommerce', 'MOTO', 'Retail', 'Restaurant' -->
		<add key="TxnData_CustomerPresent" value="Present"/>
		<!-- [Ecommerce : Ecommerce] [MOTO : MOTO] [Retail/Restaurant : Present] -->
		<add key="TxnData_SignatureCaptured" value="false"/>
		<!-- 'true', 'false' - For retail/restaurant should be configurable in their software and should be marked whether or not software actually gets the signature for each transaction -->
		<add key="TxnData_IncludeAVS" value="true"/>
		<!-- 'true', 'false' -->
		<add key="TxnData_IncludeCV" value="false"/>
		<!-- 'true', 'false' -->
		<add key="TxnData_IncludeVPAS" value="false"/>
		<!-- 'true', 'false' -->
		<add key="TxnData_IncludeUCAF" value="false"/>
		<!-- 'true', 'false' -->
		<add key="TxnData_IncludeCFees" value="false"/>
		<!-- 'true', 'false'-->
		<add key="TxnData_SoftDescriptors" value="false"/>
		<!-- 'true', 'false' Note : Not all services support -->

		<!-- Process as a BankcardTransaction object or as a BankcardTransactionPro object-->
		<add key="ProcessAsBankcardTransaction_Pro" value="true"/>
		<!-- 'true', 'false' If set to true the following Pro parameters are required-->
		<add key="Pro_PurchaseCardLevel" value="Level1"/>
		<!-- 'Level1', 'Level2', 'Level3' -->
		<add key="Pro_InterchangeData" value="false"/>
		<!-- 'true', 'false'-->
		<add key="Pro_IncludeLevel2OrLevel3Data" value="false"/>
		<!-- 'true', 'false'-->

		<!--  Endpoint Management used by HelperMethods.cs. Please also note that system.serviceModel below also relies on the url to be correct. -->
		<add key="BaseSvcEndpointPrimary" value="https://api.cipcert.goevo.com/2.0.19/SvcInfo"/>
		<add key="BaseSvcEndpointSecondary" value="https://api.cipcert.goevo.com/2.0.19/SvcInfo"/>
		<add key="BaseTxnEndpointPrimary" value="https://api.cipcert.goevo.com/2.0.19/Txn"/>
		<add key="BaseTxnEndpointSecondary" value="https://api.cipcert.goevo.com/2.0.19/Txn"/>
		<add key="BaseDataServicesEndpointPrimary" value="https://api.cipcert.goevo.com/2.0.19/DataServices/TMS"/>
		<add key="BaseDataServicesEndpointSecondary" value="https://api.cipcert.goevo.com/2.0.19/DataServices/TMS"/> 

	</appSettings>
	<system.serviceModel>
		<bindings>
   <basicHttpBinding>
    <binding name="ServiceInfoProcessing_ICWSServiceInformation"
     closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00"
     sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false"
     hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288"
     maxBufferSize="65536" maxReceivedMessageSize="65536" textEncoding="utf-8"
     transferMode="Buffered" useDefaultWebProxy="true" messageEncoding="Text">
     <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
      maxBytesPerRead="4096" maxNameTableCharCount="16384" />
     <security mode="Transport">
      <transport clientCredentialType="None" proxyCredentialType="None"
       realm="" />
      <message clientCredentialType="UserName" algorithmSuite="Default" />
     </security>
        </binding>
        <binding name="TransactionProcessing_ICwsTransactionProcessing" closeTimeout="00:05:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:05:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="Transport">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="">
              <extendedProtectionPolicy policyEnforcement="Never" />
            </transport>
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <binding name="TransactionProcessing_ICWSBankcard" closeTimeout="00:05:00"
            openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:05:00"
            allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
            maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
            messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
            useDefaultWebProxy="true">
     <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
      maxBytesPerRead="4096" maxNameTableCharCount="16384" />
     <security mode="Transport">
      <transport clientCredentialType="None" proxyCredentialType="None"
       realm="" />
      <message clientCredentialType="UserName" algorithmSuite="Default" />
     </security>
    </binding>
    <binding name="BasicHttpBinding_ITMSOperations" closeTimeout="00:01:00"
     openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
     allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
     maxBufferPoolSize="524288" maxBufferSize="131072" maxReceivedMessageSize="131072"
     textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true"
     messageEncoding="Text">
     <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
      maxBytesPerRead="4096" maxNameTableCharCount="16384" />
     <security mode="Transport">
      <transport clientCredentialType="None" proxyCredentialType="None"
       realm="" />
      <message clientCredentialType="UserName" algorithmSuite="Default" />
     </security>
    </binding>
    <binding name="BasicHttpBinding_IDataServicesBilling">
     <security mode="Transport" />
    </binding>
    <binding name="TransactionProcessing_ICwsTransactionProcessing1">
     <security mode="Transport" />
    </binding>
   </basicHttpBinding>
  </bindings>
		<client>
   <endpoint address="https://api.ciptest.goevo.local/2.0.19/SvcInfo"
    binding="basicHttpBinding" bindingConfiguration="ServiceInfoProcessing_ICWSServiceInformation"
    contract="CWSServiceInformation.ICWSServiceInformation" name="ServiceInfoProcessing_ICWSServiceInformation" />
   <endpoint address="https://api.ciptest.goevo.local/2.0.19/DataServices/TMS"
    binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ITMSOperations"
    contract="CWSTransactionManagement.ITMSOperations" name="BasicHttpBinding_ITMSOperations" />
   <endpoint address="https://api.ciptest.goevo.local/2.0.19/DataServices/Billing"
    binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IDataServicesBilling"
    contract="CWSTransactionManagement.IDataServicesBilling" name="BasicHttpBinding_IDataServicesBilling" />
   <endpoint address="https://api.ciptest.goevo.local/2.0.19/Txn"
    binding="basicHttpBinding" bindingConfiguration="TransactionProcessing_ICwsTransactionProcessing"
    contract="CwsTransactionProcessing.ICwsTransactionProcessing"
    name="TransactionProcessing_ICwsTransactionProcessing" />
  </client>
	</system.serviceModel>	
</configuration>
